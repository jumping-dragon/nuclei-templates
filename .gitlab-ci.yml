stages:
- digest
- deploy
- cleanup

generate digest:
  stage: digest
  image: debian:bullseye
  before_script:
    - apt update
    - apt install wget unzip -y
    - arch=$(uname -m | sed 's/^x86_64$/amd64/')
    - wget https://github.com/duckdb/duckdb/releases/download/v1.1.2/duckdb_cli-linux-$arch.zip -O duckdb.zip && unzip duckdb.zip && mv duckdb /usr/bin/duckdb && chmod +x /usr/bin/duckdb && rm duckdb.zip
    - arch=$(uname -m | sed 's/^aarch64$/arm64/'| sed 's/^x86_64$/amd64/')
    - wget https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_$arch -O /usr/bin/yq && chmod +x /usr/bin/yq
  script:
    - find ./ -type f -regex ".*\.yaml" | xargs -I {} sh -c 'yq eval {} -o=json > {}.json; echo {}'
    - duckdb -c "copy (select filename,info.metadata,info.classification from read_json('*/**/*.yaml.json', format='auto',union_by_name=true,filename=true)) to 'meta.parquet' (FORMAT PARQUET);"
  artifacts:
    paths:
      - ./meta.parquet

generate digest timestamp:
  stage: digest
  image: debian:bullseye
  before_script:
    - apt update
    - apt install git wget unzip -y
    - arch=$(uname -m | sed 's/^x86_64$/amd64/')
    - wget https://github.com/duckdb/duckdb/releases/download/v1.1.2/duckdb_cli-linux-$arch.zip -O duckdb.zip && unzip duckdb.zip && mv duckdb /usr/bin/duckdb && chmod +x /usr/bin/duckdb && rm duckdb.zip
    - arch=$(uname -m | sed 's/^aarch64$/arm64/'| sed 's/^x86_64$/amd64/')
    - wget https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_$arch -O /usr/bin/yq && chmod +x /usr/bin/yq
  script:
    - echo 'filename,date' > output.csv
    - find ./ -type f -regex ".*\.yaml" | xargs -P 8 -I {} echo {},$(git log -1 --format=%cI) >> output.csv
    - tail -n 10 output.csv
    - duckdb -c "copy (select replace(filename,'./','') filename, date from read_csv('output.csv', delim = ',', columns = {'filename':'VARCHAR', 'date':'TIMESTAMP'})) to 'timestamp.parquet' (FORMAT PARQUET);"
  artifacts:
    paths:
      - ./timestamp.parquet

sync to s3 mr:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  before_script:
    - apt update
    - apt install git -y
  script:
    - git diff --no-commit-id --name-only ${CI_MERGE_REQUEST_DIFF_BASE_SHA} -- . ':(exclude).git*' | xargs -I {} aws --endpoint-url $S3_ENDPOINT s3 cp  ./{} s3://"$S3_BUCKET/$CI_MERGE_REQUEST_IID/{}"
  only:
    refs:
      - merge_requests
  dependencies:
    - generate digest
    - generate digest timestamp

clean merged s3 mr sync:
  stage: cleanup
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - echo "Cleaning up MR-${CI_MERGE_REQUEST_IID} directory"
    - aws --endpoint-url $S3_ENDPOINT s3 rm s3://"$S3_BUCKET/$CI_MERGE_REQUEST_IID --recursive"
  only:
    - merged

sync to s3 main:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - aws --endpoint-url $S3_ENDPOINT s3 sync . s3://"$S3_BUCKET/main" --delete --exclude ".git/*" --exclude "*.md" --exclude ".*" --exclude "*.json" --exclude "*.txt"
  only:
    refs:
      - main
  dependencies:
    - generate digest
    - generate digest timestamp
